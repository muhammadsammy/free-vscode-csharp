name: OmniSharp-VSCode Release CI

on:
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup dotnet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.x'

    - name: Install Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'

    - name: Install dependencies
      run: |
          npm ci
          npm i -g gulp

    - name: Compile
      run: npm run compile

    - name: Prepublish VSIXs
      run: npm run vscode:prepublish

    - name: Build VSIXs
      run: gulp 'vsix:release:package'

    - name: Get package version
      run: node -e "console.log('VERSION=' + require('./package.json').version)" >> $GITHUB_ENV

    - name: Upload release build (darwin-arm64)
      id: upload-release-asset-darwin-arm64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./vsix/csharp-darwin-arm64-${{ env.VERSION }}.vsix
        asset_name: csharp-darwin-arm64-${{ env.VERSION }}.vsix
        asset_content_type: application/zip

    - name: Upload release build (darwin-x64)
      id: upload-release-asset-darwin-x64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./vsix/csharp-darwin-x64-${{ env.VERSION }}.vsix
        asset_name: csharp-darwin-x64-${{ env.VERSION }}.vsix
        asset_content_type: application/zip

    - name: Upload release build (linux-arm64)
      id: upload-release-asset-linux-arm64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./vsix/csharp-linux-arm64-${{ env.VERSION }}.vsix
        asset_name: csharp-linux-arm64-${{ env.VERSION }}.vsix
        asset_content_type: application/zip

    - name: Upload release build (linux-x64)
      id: upload-release-asset-linux-x64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./vsix/csharp-linux-x64-${{ env.VERSION }}.vsix
        asset_name: csharp-linux-x64-${{ env.VERSION }}.vsix
        asset_content_type: application/zip

    - name: Upload release build (alpine-arm64)
      id: upload-release-asset-alpine-arm64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./vsix/csharp-alpine-arm64-${{ env.VERSION }}.vsix
        asset_name: csharp-alpine-arm64-${{ env.VERSION }}.vsix
        asset_content_type: application/zip

    - name: Upload release build (alpine-x64)
      id: upload-release-asset-alpine-x64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./vsix/csharp-alpine-x64-${{ env.VERSION }}.vsix
        asset_name: csharp-alpine-x64-${{ env.VERSION }}.vsix
        asset_content_type: application/zip

    - name: Upload release build (win32-arm64)
      id: upload-release-asset-win32-arm64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./vsix/csharp-win32-arm64-${{ env.VERSION }}.vsix
        asset_name: csharp-win32-arm64-${{ env.VERSION }}.vsix
        asset_content_type: application/zip

    - name: Upload release build (win32-ia32)
      id: upload-release-asset-win32-ia32
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./vsix/csharp-win32-ia32-${{ env.VERSION }}.vsix
        asset_name: csharp-win32-ia32-${{ env.VERSION }}.vsix
        asset_content_type: application/zip

    - name: Upload release build (win32-x64)
      id: upload-release-asset-win32-x64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./vsix/csharp-win32-x64-${{ env.VERSION }}.vsix
        asset_name: csharp-win32-x64-${{ env.VERSION }}.vsix
        asset_content_type: application/zip
